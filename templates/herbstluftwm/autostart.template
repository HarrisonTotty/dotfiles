#!/bin/bash
# Primary configuration file for herbstluftwm
{{
  require('colors', 'this.exec_exit', 'this.exec_lock', 'this.exec_restart_wm', 'this.exec_terminal')
}}
{% if colors|length != 16 %}
{{ raise('"colors" variable is not a list of 16 colors') }}
{% endif %}

# ---------------- Setup ----------------

# Create a function for shorter commands.
hc() { herbstclient "$@" }

# Force the server to reload.
hc emit_hook reload

# Remove all existing key/mouse bindings.
hc keyunbind --all
hc mouseunbind --all

# Remove all rules.
hc unrule --all

# Reset the theme.
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

# Source the colors generated by pywal, if they exist.
if [ -f "$HOME/.cache/wal/colors.sh" ]; then
    source "$HOME/.cache/wal/colors.sh"
else
    background="{{ colors[0] }}"
    color0="{{ colors[0] }}"
    color1="{{ colors[1] }}"
    color2="{{ colors[2] }}"
    color3="{{ colors[3] }}"
    color4="{{ colors[4] }}"
    color5="{{ colors[5] }}"
    color6="{{ colors[6] }}"
    color7="{{ colors[7] }}"
    color8="{{ colors[8] }}"
    color9="{{ colors[9] }}"
    color10="{{ colors[10] }}"
    color11="{{ colors[11] }}"
    color12="{{ colors[12] }}"
    color13="{{ colors[13] }}"
    color14="{{ colors[14] }}"
    color15="{{ colors[15] }}"
    cursor="{{ colors[7] }}"
    foreground="{{ colors[7] }}"
fi

# ---------------------------------------


# ----- General Key/Mouse Bindings ------

# Set Mod to the super (Windows) key.
Mod=Mod4

# Toggle floating mode on the active TAG.
hc keybind $Mod-Shift-space floating toggle

# Quit the window manager.
hc keybind $Mod-Shift-q quit

# Close the active window.
hc keybind $Mod-q close

# Remove the focused frame and merges its windows with its neighbor frame.
hc keybind $Mod-r remove

# ----- Client Focusing -----
hc keybind $Mod-Down  focus down
hc keybind $Mod-Left  focus left
hc keybind $Mod-Right focus right
hc keybind $Mod-Up    focus up

# ----- Client Moving -----
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-Up    shift up

# ----- Frame Creation -----
hc keybind $Mod-Mod1-Down  split bottom 0.5
hc keybind $Mod-Mod1-Left  split left   0.5
hc keybind $Mod-Mod1-Right split right  0.5
hc keybind $Mod-Mod1-Up    split top    0.5

# ----- Frame Resizing -----
hc keybind $Mod-Control-Down  resize down  +0.05
hc keybind $Mod-Control-Left  resize left  +0.05
hc keybind $Mod-Control-Right resize right +0.05
hc keybind $Mod-Control-Up    resize up    +0.05

# ----- Cycling -----
hc keybind $Mod-Tab       cycle_all +1
hc heybind $Mod-Shift-Tab cycle_all -1

# ----- Mouse Bindings -----
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# ---------------------------------------


# --------- Launching Programs ----------

{% if this.exec_mkdot is defined %}
# Dotfiles Generator
hc keybind $Mod+period spawn {{ this.exec_mkdot }}
{% endif %}

{% if this.exec_file_manager is defined %}
# File Manager
hc keybind $Mod+f spawn {{ this.exec_file_manager }}
{% endif %}

# Lock Screen
hc keybind $Mod+Shift+l spawn {{ this.exec_lock }}

{% if this.exec_network is defined %}
# Network Manager
hc keybind $Mod+Shift+F2 spawn {{ this.exec_network }}
{% endif %}

{% if this.exec_passwords is defined %}
# Password Manager
hc keybind $Mod+F12 spawn {{ this.exec_passwords }}
{% endif %}

{% if this.exec_launcher is defined %}
# Program Launcher
hc keybind $Mod+grave spawn {{ this.exec_launcher }}
{% endif %}

{% if this.exec_screenshot_full is defined %}
# Screenshot (fullscreen)
hc keybind $Mod+Insert spawn {{ this.exec_screenshot_full }}
{% endif %}

{% if this.exec_screenshot_select is defined %}
# Screenshot (selection)
hc keybind $Mod+Shift+Insert spawn {{ this.exec_screenshot_select }}
{% endif %}

{% if this.exec_ssh is defined %}
# SSH Launcher
hc keybind $Mod+Shift+grave spawn {{ this.exec_ssh }}
{% endif %}

{% if this.exec_editor is defined %}
# Text Editor
hc keybind $Mod+e spawn {{ this.exec_editor }}
{% endif %}

# Terminal
hc keybind $Mod+Return spawn {{ this.exec_terminal }}

{% if this.window_switcher is defined %}
# Window Switcher
hc keybind Mod1+Tab spawn {{ this.window_switcher }}
{% endif %}

# ---------------------------------------


# ---------------- Theme ----------------

# ----- Colors -----
hc attr theme.active.color         "$color3"
hc attr theme.active.inner_color   "$color3"
hc attr theme.active.outer_color   "$color3"
hc attr theme.background_color     "$background"
hc attr theme.floating.outer_color "$background"
hc attr theme.inner_color          "$background"
hc attr theme.normal.color         "$background"
hc attr theme.urgent.color         "$color4"
hc set  frame_bg_active_color      "$background"
hc set  frame_bg_normal_color      "$background"
hc set  frame_border_active_color  "$color3"
hc set  frame_border_normal_color  "$background"

# ----- Dimensions -----
hc attr theme.border_width          3
hc attr theme.floating.border_width 3
hc attr theme.floating.outer_width  0
hc attr theme.inner_width           0
hc set  frame_border_width          2
hc set  frame_gap                   4
hc set  frame_padding               0
hc set  frame_transparent_width     5
hc set  mouse_recenter_gap          0
hc set  snap_distance               0
hc set  snap_gap                    0
hc set  window_gap                  0

# ----- Misc -----
hc set tree_style '╾│ ├└╼─┐'

# ---------------------------------------


# -------------- Behavior ---------------

# If set, all frames are displayed. If unset, only frames with focus or with
# windows in it are displayed.
hc set always_show_frame 1

#  If set, frame borders and gaps will be removed when there’s no ambiguity
# regarding the focused frame.
hc set smart_frame_surroundings 1

# If set, window borders and gaps will be removed and minimal when there’s no
# ambiguity regarding the focused window.
hc set smart_window_surroundings 1

# ----- Rules -----
hc rule                                                              focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)'     pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG'                      focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# ---------------------------------------


# ------------- Finalization ------------

# Repaint the monitors
hc unlock

# ---------------------------------------
